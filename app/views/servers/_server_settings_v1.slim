/ Player Economy Card
.card.mb-4
  .card-header
    h4.mb-0
      i.bi.bi-currency-dollar.text-warning.me-2
      | Player Economy

  .card-body
    / Gambling Settings
    .mb-4
      .d-flex.align-items-center.justify-content-between.mb-3
        h5.mb-0
          i.bi.bi-dice-6.text-danger.me-2
          | Gambling Configuration
        small.text-muted
          | Used by #{command_usage(:gamble, show_arguments: false)}

      .alert.alert-info.border-info.bg-info.bg-opacity-10.mb-4
        h6.mb-2.text-info How Gambling Works
        p.small.mb-0
          | When a player wins, ESM calculates their payout using complex algorithms with randomization and payout modifiers.

      .row.g-3.mb-4
        .col-6
          label.form-label.fw-medium Win Chance
          .input-group
            = f.number_field :gambling_win_percentage,
                class: "form-control",
                placeholder: "35",
                min: 0,
                max: 100
            span.input-group-text %
          small.form-text.text-muted Default: 35%

        .col-6
          / Placeholder for consistency with v2, but v1 doesn't have locker limits
          .mt-4.pt-3

    / Advanced Gambling Configuration
    .border.border-secondary.rounded.p-3.bg-body-secondary.bg-opacity-25
      .d-flex.align-items-center.justify-content-between.mb-3
        h6.mb-0.text-light Advanced Payout Configuration
        = link_to "#", class: "small text-muted text-decoration-none"
          i.bi.bi-info-circle.me-1
          | Detailed Explanation

      .row.g-3.mb-3
        .col-6
          label.form-label.fw-medium Payout Percentage (0-100)
          = f.number_field :gambling_payout_base,
              class: "form-control",
              placeholder: "95",
              min: 0,
              max: 100
        .col-6
          label.form-label.fw-medium Payout Modifier (â‰¥ 1 recommended)
          = f.number_field :gambling_modifier,
              class: "form-control",
              placeholder: "1",
              min: 0,
              step: 0.1

      .mb-0
        h6.mb-2.text-light Payout Randomizer Range
        .row.g-2
          .col-4
            label.form-label.small Minimum
            = f.number_field :gambling_payout_randomizer_min,
                class: "form-control form-control-sm",
                placeholder: "0",
                min: 0,
                step: 0.1
          .col-4
            label.form-label.small Middle
            = f.number_field :gambling_payout_randomizer_mid,
                class: "form-control form-control-sm",
                placeholder: "0.5",
                min: 0,
                step: 0.1
          .col-4
            label.form-label.small Maximum
            = f.number_field :gambling_payout_randomizer_max,
                class: "form-control form-control-sm",
                placeholder: "1",
                min: 0,
                step: 0.1

/ Territory Management Card
.card.mb-4
  .card-header
    h4.mb-0
      i.bi.bi-house.text-success.me-2
      | Territory Management

  .card-body
    / Territory Taxes
    .mb-4
      h5.mb-3
        i.bi.bi-receipt.text-warning.me-2
        | Territory Taxes
      p.text-muted.small.mb-4
        | A small fee for the greater good, taxes on making a payment through the bot

      .row.g-3
        .col-6
          label.form-label.fw-medium Territory Payment Tax
          .input-group
            = f.number_field :territory_payment_tax,
                class: "form-control",
                placeholder: "0",
                min: 0,
                max: 100
            span.input-group-text %
          small.form-text.text-muted Tax on #{command_usage(:pay, show_arguments: false)} command

        .col-6
          label.form-label.fw-medium Territory Upgrade Tax
          .input-group
            = f.number_field :territory_upgrade_tax,
                class: "form-control",
                placeholder: "0",
                min: 0,
                max: 100
            span.input-group-text %
          small.form-text.text-muted Tax on #{command_usage(:upgrade, show_arguments: false)} command

    hr.my-4

    / Payment Limits
    .mb-0
      h5.mb-3
        i.bi.bi-credit-card.text-info.me-2
        | Payment Limits
      p.text-muted.small.mb-4
        | How many times can a player pay before they need to join the server? (0 to disable cooldown)

      .row.g-3
        .col-6
          label.form-label.fw-medium Max Payments (Inclusive)
          = f.number_field :max_payment_count,
              class: "form-control",
              placeholder: "0",
              min: 0
          small.form-text.text-muted 0 for unlimited payments

/ Event Logging Card
.card.mb-4
  .card-header
    h4.mb-0
      i.bi.bi-journal-text.text-primary.me-2
      | Event Logging

  .card-body
    p.text-muted.small.mb-4
      | Log information from the following actions to the logging channel

    / Administrative Actions
    .card.bg-dark.border-secondary.mb-4
      .card-body
        h5.mb-3
          i.bi.bi-shield-lock.text-warning.me-2
          | Administrative Actions
        .row.g-3
          .col-6
            .form-check.form-switch
              = f.check_box :logging_exec,
                  class: "form-check-input"
              = f.label :logging_exec, class: "form-check-label fw-medium" do
                | SQF Executed on Server
            small.text-muted.d-block.mt-1 #{command_usage(:sqf, show_arguments: false)} command usage

          .col-6
            .form-check.form-switch
              = f.check_box :logging_modify_player,
                  class: "form-check-input"
              = f.label :logging_modify_player, class: "form-check-label fw-medium" do
                | Player Attribute Modifications
            small.text-muted.d-block.mt-1 #{command_usage(:player, show_arguments: false)} command usage

    / Economy Actions
    .card.bg-dark.border-secondary.mb-4
      .card-body
        h5.mb-3
          i.bi.bi-piggy-bank.text-success.me-2
          | Economy Actions
        .row.g-3
          .col-6
            .form-check.form-switch
              = f.check_box :logging_gamble,
                  class: "form-check-input"
              = f.label :logging_gamble, class: "form-check-label fw-medium" do
                | Player Gambling Poptabs
            small.text-muted.d-block.mt-1 #{command_usage(:gamble, show_arguments: false)} command usage

          .col-6
            .form-check.form-switch
              = f.check_box :logging_reward_player,
                  class: "form-check-input"
              = f.label :logging_reward_player, class: "form-check-label fw-medium" do
                | Player Redeeming Rewards
            small.text-muted.d-block.mt-1 #{command_usage(:reward, show_arguments: false)} command usage

    / Territory Actions
    .card.bg-dark.border-secondary.mb-0
      .card-body
        h5.mb-3
          i.bi.bi-people.text-info.me-2
          | Territory Actions
        .row.g-3
          .col-6
            .form-check.form-switch
              = f.check_box :logging_add_player_to_territory,
                  class: "form-check-input"
              = f.label :logging_add_player_to_territory, class: "form-check-label fw-medium" do
                | Player Added to Territory
            small.text-muted.d-block.mt-1 #{command_usage(:add, show_arguments: false)} command usage

          .col-6
            .form-check.form-switch
              = f.check_box :logging_remove_player_from_territory,
                  class: "form-check-input"
              = f.label :logging_remove_player_from_territory, class: "form-check-label fw-medium" do
                | Player Removed from Territory
            small.text-muted.d-block.mt-1 #{command_usage(:remove, show_arguments: false)} command usage

          .col-6
            .form-check.form-switch
              = f.check_box :logging_promote_player,
                  class: "form-check-input"
              = f.label :logging_promote_player, class: "form-check-label fw-medium" do
                | Player Promoted to Moderator
            small.text-muted.d-block.mt-1 #{command_usage(:promote, show_arguments: false)} command usage

          .col-6
            .form-check.form-switch
              = f.check_box :logging_demote_player,
                  class: "form-check-input"
              = f.label :logging_demote_player, class: "form-check-label fw-medium" do
                | Player Demoted to Builder
            small.text-muted.d-block.mt-1 #{command_usage(:demote, show_arguments: false)} command usage

          .col-6
            .form-check.form-switch
              = f.check_box :logging_pay_territory,
                  class: "form-check-input"
              = f.label :logging_pay_territory, class: "form-check-label fw-medium" do
                | Territory Paid
            small.text-muted.d-block.mt-1 #{command_usage(:pay, show_arguments: false)} command usage

          .col-6
            .form-check.form-switch
              = f.check_box :logging_upgrade_territory,
                  class: "form-check-input"
              = f.label :logging_upgrade_territory, class: "form-check-label fw-medium" do
                | Territory Upgraded
            small.text-muted.d-block.mt-1 #{command_usage(:upgrade, show_arguments: false)} command usage

/ Advanced Configuration Cards
.card.mb-4
  .card-header
    h4.mb-0
      i.bi.bi-folder.text-warning.me-2
      | Custom File Paths

  .card-body
    p.text-muted.small.mb-4
      | Override default paths for ExtDB and logging. Only modify these if you have custom server configurations.

    .row.g-3
      .col-6
        label.form-label.fw-medium Custom ExtDB Path
        = f.text_field :extdb_conf_path,
            class: "form-control font-monospace",
            placeholder: "Leave blank for default"
        small.form-text.text-muted
          | Full path to your extDB ini directory
          br
          | Example:
          code D:\Arma3Servers\@ExileServer

      .col-6
        label.form-label.fw-medium Custom Logging Path
        = f.text_field :logging_path,
            class: "form-control font-monospace",
            placeholder: "Leave blank for default"
        small.form-text.text-muted
          | Full path for ESM logging directory
          br
          | Example:
          code D:\Arma3Servers\@ExileServer

.card.mb-0
  .card-header
    h4.mb-0
      i.bi.bi-cpu.text-info.me-2
      | Request Threading

  .card-body
    p.text-muted.small.mb-4
      | Configure how ESM processes requests on your server. Exile threading generally provides better FPS.

    .row.g-3
      .col-6
        label.form-label.fw-medium Request Thread Type
        = f.select :request_thread_type,
            options_for_select([["Exile", "exile"], ["SQF", "sqf"]], "exile"),
            {},
            class: "form-select"
        small.form-text.text-muted
          strong Recommended: Exile
          |  for better FPS. Use SQF if you notice processing delays.

      .col-6
        label.form-label.fw-medium Request Tick Rate (seconds)
        = f.number_field :request_thread_tick,
            class: "form-control",
            placeholder: "0.1",
            min: 0,
            step: 0.1
        small.form-text.text-muted
          | How often ESM checks for requests. Lower = faster, higher = less server load.
