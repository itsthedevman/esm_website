.container.window
  .row
    / Table of Contents Sidebar
    .col-lg-3.col-xl-2
      .table-of-contents
        .card.bg-dark.mb-4.border.border-0
          .card-body.p-0
            .list-group.list-group-flush[
              data-bs-spy="scroll"
              data-bs-target="#commands"
              data-bs-offset="0"
              data-bs-smooth-scroll="true"
            ]
              - commands_by_domain.each do |(domain, category), commands|
                a.list-group-item.list-group-item-action.text-light.border.border-0 href="##{category.parameterize}"
                  strong = "/#{domain}"
                / Individual commands
                - commands.each do |command|
                  a.list-group-item.list-group-item-action.text-muted.ps-4.border.border-0.small href="##{command.name}"
                    = command.operation

    / Main Content
    .col-lg-9.col-xl-10.overflow-y-auto
      / Header section
      .border-bottom.border-primary.pb-4.mb-5
        h1.text-primary.mb-3 Commands
        p.text-muted.fs-5
          | Command documentation can be found, at any time, by using the
          = command_usage(:help)
          | command.
          br
          | For example, use
          = command_usage(:help, arguments: {with: "/community servers"})
          | to show the documentation for the
          = command_usage(:servers, only: [])
          | command.

      / Color legend for arguments
      .card.bg-dark.border-secondary.mb-5
        .card-body
          h6.text-primary.fw-bold.mb-3 Argument Color Guide
          .row.g-3
            .col-md-6.col-lg-3
              strong.me-1 Identifiers:
              span.arg.identifier server_id
              .small.text-muted.mt-2
                |< Which server, community, or territory
            .col-md-6.col-lg-3
              strong.me-1 Targets:
              span.arg.target target
              .small.text-muted.mt-2
                |< Who you're running the command on
            .col-md-6.col-lg-3
              strong.me-1 Content:
              span.arg.content amount
              .small.text-muted.mt-2
                |< The actual stuff (money, messages, etc.)
            .col-md-6.col-lg-3
              strong.me-1 Options:
              span.arg.option flags
              .small.text-muted.mt-2
                |< How the command should behave

      / Error state
      - if commands_by_domain.empty?
        .alert.alert-warning.text-center
          h5 Failed to retrieve commands. Please try refreshing this page.
          small If this persists, please let us know via our Discord

      / Commands by category
      #commands
        - commands_by_domain.each do |(domain, category), commands|
          .mb-5 id=category.to_s.parameterize
            h2.border-bottom.border-secondary.pb-2.mb-4
              = category.humanize
              |< Commands

            - commands.each_with_index do |command, index|
              .card.bg-dark.border-secondary.mb-4 id=command.name
                .card-body
                  / Command title and admin indicator
                  .d-flex.align-items-center.gap-2.mb-3
                    - if command.type == "admin"
                      i.bi.bi-person-fill-lock.fs-2.text-warning[
                        data-bs-toggle="tooltip"
                        title="This is an admin command and may be restricted to certain roles"
                      ]

                    h4.text-primary.mb-0.font-monospace
                      = command.usage

                  / Command description
                  .mb-3
                    = Markdown.to_html(command.description).html_safe

                  / Usage section
                  .bg-black.border.border-secondary.rounded.p-3.mb-3
                    .text-warning.fw-bold.text-uppercase.small.mb-2 Usage
                    .font-monospace.fs-6
                      = render_component(CommandUsageDocsComponent, command:)

                  / Arguments section
                  - if command.arguments.present?
                    .mb-3
                      .text-warning.fw-bold.text-uppercase.small.mb-2 Arguments
                      .ps-3
                        = render_component(CommandArgumentDocsComponent, command:)

                  / Examples section
                  - if command.examples.present?
                    .mb-0
                      .text-warning.fw-bold.text-uppercase.small.mb-2 Examples
                      .ps-3
                        = render_component(CommandExampleDocsComponent, command:)
